{"version":3,"file":"component---src-templates-blog-list-template-js-1f96adfab29ce7521770.js","mappings":"sQAQMA,EAAOC,EAAAA,QAAAA,KAAAA,WAAH,oEAAGA,CAAH,mFAMJC,EAAWD,EAAAA,QAAAA,GAAAA,WAAH,wEAAGA,CAAH,uJAiBOE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CAuElB,OAvEkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,mBAAmBC,MACjD,EAAkCJ,KAAKC,MAAMI,YAArCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WACnC,OACE,gBAAC,IAAD,KACE,gBAACjB,EAAD,KACE,gBAAC,KAAD,KACGK,EAAMc,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKC,OAASD,EAAKE,KAC3BC,GAAQC,EAAAA,EAAAA,GAASJ,EAAKK,WAC5B,OACE,gBAAC,IAAD,KACE,gBAAC,EAAAC,EAAD,CACEH,MAAOA,EACPI,IAAG,gBAAkBP,EAAKC,MAAvB,aAEL,uBAAKO,UAAU,iBACb,4BAAOR,EAAKS,MACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMX,EAAKE,MACjB,0BAAKD,GAAY,KAEnB,yBAAID,EAAKY,cAEX,gBAAC,KAAD,KACGZ,EAAKa,KAAKd,KAAI,SAAAe,GACb,OACE,gBAAC,EAAAJ,KAAD,CAAMC,GAAE,SAAWG,GACjB,8BAASA,GAGd,KAIR,KAGH,gBAAChC,EAAD,MACIY,GACA,gBAAC,EAAAgB,KAAD,CAAMC,GAAIf,EAAUmB,IAAI,QAAxB,mBAIDC,MAAMC,KAAK,CAAEC,OAAQzB,IAAY,SAAC0B,EAAGC,GAAJ,OAChC,sBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,gBAAC,EAAAV,KAAD,CACEC,GAAE,KAAY,IAANS,EAAU,GAAKA,EAAI,GAC3BE,MAAO,CACLC,MAAOH,EAAI,IAAM5B,EAAc,UAAY,GAC3CgC,WAAYJ,EAAI,IAAM5B,EAAc,UAAY,GAChDiC,QAASL,EAAI,IAAM5B,EAAc,WAAa,KAG/C4B,EAAI,GAVuB,KAchCzB,GACA,gBAAC,EAAAe,KAAD,CAAMC,GAAIb,EAAUiB,IAAI,QAAxB,iBAQX,IAvEkBhC,CAAiB2C,EAAAA,U,sKC9BzBC,EAAS9C,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,sGAQN+C,EAAa/C,EAAAA,QAAAA,QAAAA,WAAH,iEAAGA,CAAH,yRAgBVgD,EAAUhD,EAAAA,QAAAA,GAAAA,WAAH,8DAAGA,CAAH,2PAkBPiD,EAAcjD,EAAAA,QAAAA,OAAAA,WAAH,kEAAGA,CAAH,uMAmBXkD,EAAOlD,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,kN,2BC5DXmD,E,QAAOnD,QAAAA,QAAAA,WAAH,+CAAGA,CAAH,0tBAsFV,K","sources":["webpack://gatsby-starter-default/./src/templates/blog-list-template.js","webpack://gatsby-starter-default/./src/themes/Pages/PageStyles.js","webpack://gatsby-starter-default/./src/themes/Tile.js"],"sourcesContent":["import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport Tile from \"../themes/Tile\"\r\nimport { Tags, FlexCenter } from \"../themes/Pages/PageStyles\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Blog = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst PageList = styled.ul`\r\n  display: flex;\r\n  margin: 1em;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1em;\r\n  a {\r\n    text-decoration: none;\r\n    color: #000;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n`\r\n\r\nexport default class BlogList extends React.Component {\r\n  render() {\r\n    const posts = this.props.data.allGraphCmsArticle.edges\r\n    const { currentPage, numPages } = this.props.pageContext\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\r\n    const nextPage = (currentPage + 1).toString()\r\n    return (\r\n      <Layout>\r\n        <Blog>\r\n          <FlexCenter>\r\n            {posts.map(({ node }) => {\r\n              const title = node.title || node.slug\r\n              const image = getImage(node.thumbnail)\r\n              return (\r\n                <Tile>\r\n                  <GatsbyImage\r\n                    image={image}\r\n                    alt={`Thumbnail of ${node.title} article`}\r\n                  />\r\n                  <div className=\"tile__wrapper\">\r\n                    <span>{node.date}</span>\r\n                    <Link to={`/${node.slug}`}>\r\n                      <h3>{title}</h3>{\" \"}\r\n                    </Link>\r\n                    <p>{node.description}</p>\r\n                  </div>\r\n                  <Tags>\r\n                    {node.tags.map(tag => {\r\n                      return (\r\n                        <Link to={`/tags/${tag}`}>\r\n                          <button>{tag}</button>\r\n                        </Link>\r\n                      )\r\n                    })}\r\n                  </Tags>\r\n                </Tile>\r\n              )\r\n            })}\r\n          </FlexCenter>\r\n\r\n          <PageList>\r\n            {!isFirst && (\r\n              <Link to={prevPage} rel=\"prev\">\r\n                ← Previous Page\r\n              </Link>\r\n            )}\r\n            {Array.from({ length: numPages }, (_, i) => (\r\n              <li key={`pagination-number${i + 1}`}>\r\n                <Link\r\n                  to={`/${i === 0 ? \"\" : i + 1}`}\r\n                  style={{\r\n                    color: i + 1 === currentPage ? \"#ffffff\" : \"\",\r\n                    background: i + 1 === currentPage ? \"#6b7280\" : \"\",\r\n                    padding: i + 1 === currentPage ? \" 2px 7px\" : \"\",\r\n                  }}\r\n                >\r\n                  {i + 1}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n            {!isLast && (\r\n              <Link to={nextPage} rel=\"next\">\r\n                Next Page →\r\n              </Link>\r\n            )}\r\n          </PageList>\r\n        </Blog>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const blogListQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allGraphCmsArticle(\r\n      sort: { fields: publishedAt, order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          slug\r\n          tags\r\n          thumbnail {\r\n            gatsbyImageData(placeholder: BLURRED)\r\n          }\r\n          description\r\n          date\r\n          content {\r\n            html\r\n          }\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\nexport const Button = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10em;\r\n`\r\n\r\nexport const FlexCenter = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-items: center;\r\n  @media (min-width: 640px) {\r\n    grid-template-columns: repeat(2, 300px);\r\n    justify-content: center;\r\n    grid-column-gap: 1em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    grid-template-columns: repeat(3, 300px);\r\n    justify-content: center;\r\n    grid-column-gap: 1em;\r\n  }\r\n`\r\nexport const Heading = styled.h3`\r\n  font-weight: 600;\r\n  font-size: 1.4em;\r\n  margin-left: 0.5em;\r\n  padding-left: 0.3em;\r\n  margin-top: 0.5em;\r\n  border-left: 4px solid #047857;\r\n\r\n  @media (min-width: 640px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 3em;\r\n    border-left: none;\r\n    margin-bottom: 1, 5em;\r\n    font-weight: 700;\r\n  }\r\n`\r\n\r\nexport const ReadMoreBtn = styled.button`\r\n  margin-top: 1em;\r\n\r\n  padding: 0.5em;\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n\r\n  border-radius: 5px;\r\n  border: 2px solid #6b7280;\r\n\r\n  background-color: #fff;\r\n  color: #6b7280;\r\n  cursor: pointer;\r\n  place-self: center;\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport const Tags = styled.div`\r\n  display: flex;\r\n  gap: 0.5em;\r\n\r\n  bottom: 1em;\r\n  button {\r\n    padding: 0.4em 0.5em;\r\n    font-weight: 600;\r\n    border: 1px solid #6b7280;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n\r\n    color: #64748b;\r\n    cursor: pointer;\r\n    :hover {\r\n      background-color: #f1f5f9;\r\n    }\r\n  }\r\n`\r\n\r\n","import styled from \"styled-components\"\r\n\r\nconst Tile = styled.article`\r\n  width: 300px;\r\n  -webkit-box-shadow: 6px 5px 21px -7px rgba(66, 68, 90, 1);\r\n  -moz-box-shadow: 6px 5px 21px -7px rgba(66, 68, 90, 1);\r\n  box-shadow: 6px 5px 21px -7px rgba(66, 68, 90, 1);\r\n  margin: 1em 1em 0 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* display: grid; */\r\n \r\n  /* justify-content: space-around; */\r\n  padding: 1em;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  /* max-height: 700px; */\r\n\r\n  img{\r\n    object-fit: cover;\r\n    height: auto;\r\n  }\r\n\r\n  .gatsby-image-wrapper img{\r\n      width: 300px;\r\n      height: 200px;\r\n      object-fit: cover;\r\n    }\r\n\r\n  span{\r\n    /* margin-top: 1em; */\r\n    font-size: .9em;\r\n    color: #4b5563;\r\n    font-weight: 600;\r\n  }\r\n\r\n  a{\r\n    text-decoration: none;\r\n    color: #000;\r\n  }\r\n  h3{\r\n    font-size: 2em;\r\n    font-weight: 800;\r\n    color: #1e293b;\r\n  }\r\n\r\n  p{\r\n    color: #475569;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 4;\r\n    -webkit-box-orient: vertical; \r\n    overflow: hidden;\r\n\r\n  }\r\n\r\n  button{\r\n\r\n  }\r\n\r\n  .tile__wrapper{\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    /* flex-wrap: wrap; */\r\n    /* justify-content: space-around; */\r\n    /* width: 300px; */\r\n    gap: 0.5em;\r\n    /* margin-bottom: 1em; */\r\n    height: 100%;\r\n  }\r\n\r\n  @media(width: 640px){\r\n\r\n    img{\r\n      width: 100%;\r\n      /* max-height: 200px; */\r\n      /* display: block; */\r\n    }\r\n  }\r\n\r\n\r\n`\r\n\r\n// const TileWrapper = styled.div`\r\n// padding: 1em;\r\n\r\n// `\r\n\r\nexport default Tile\r\n\r\n\r\n{/* <Tile index={index}>\r\n<GatsbyImage image={image} alt={`Thumbnail of ${page.node.title} article`} />\r\n<span>{page.node.date}</span>\r\n<Link to={page.node.slug}> {homePageBlogRoll.title}</Link>\r\n<p>{page.node.description}</p>\r\n{page.node.tags.map(tag => {\r\n  return <Link to={`/tags/${tag}`}>{tag}</Link>\r\n})}\r\n</Tile> */}"],"names":["Blog","styled","PageList","BlogList","render","posts","this","props","data","allGraphCmsArticle","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","map","node","title","slug","image","getImage","thumbnail","G","alt","className","date","Link","to","description","tags","tag","rel","Array","from","length","_","i","key","style","color","background","padding","React","Button","FlexCenter","Heading","ReadMoreBtn","Tags","Tile"],"sourceRoot":""}