{"version":3,"file":"component---src-templates-tags-js-266e93138a564c6a2cc9.js","mappings":"uMAIMA,EAAcC,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,4IAgBJC,EAAO,WAClB,OACE,gBAACF,EAAD,KACE,gBAAC,EAAAG,KAAD,CAAMC,GAAG,KAAT,YAEW,sCAFX,aAML,ECtBKC,EAAaJ,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,uKA6BHK,EAAS,WACpB,OACE,gBAACD,EAAD,KAIE,gBAACH,EAAD,MAKL,ECzCKK,EAAgBN,EAAAA,QAAAA,QAAAA,WAAH,iEAAGA,CAAH,0UA8BbO,EAAgBP,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,uLAmBNQ,EAAS,WACpB,OACE,gBAACF,EAAD,KACE,gBAACC,EAAD,KACE,gBAACN,EAAD,CAAMQ,UAAU,SAChB,gBAAC,EAAAP,KAAD,CAAMC,GAAG,KAAT,QACA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,SAEA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,WAAT,UACA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,cAAT,cAGF,gBAACI,EAAD,KACA,gBAAC,EAAAL,KAAD,CAAMO,UAAU,WAAhB,WACA,gBAAC,EAAAP,KAAD,6CAIL,ECpEKQ,GAAcC,EAAAA,EAAAA,mBAAH,yLAuCjB,EAhBe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,gCACA,uBAAKH,UAAU,UACb,gBAACC,EAAD,MACA,gBAACL,EAAD,MACA,4BAECO,GAED,gBAACJ,EAAD,OAIL,C,mFCOD,UAtCa,SAAC,GAA2B,IAAzBK,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAER,EAA6BD,EAAKE,mBAA3BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WACRC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,gBAAC,IAAD,KAEA,gBAAC,IAAD,KACE,0BAAKI,GACL,gBAAC,IAAD,KACA,0BACGF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAATC,KACAC,EAAUF,EAAVE,MAER,OADCC,QAAQC,IAAI,CAACH,KAAAA,IAEZ,sBAAII,IAAG,QACL,gBAAC,EAAAxB,KAAD,CAAMC,GAAE,IAAMmB,GAASC,GAG5B,KAOH,gBAAC,EAAArB,KAAD,CAAMO,UAAU,WAAWN,GAAG,SAA9B,2BAKL,C,2BC7CKwB,E,QAAc3B,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,+HAiBjB,K,0BCfM4B,E,QAAc5B,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,mQA6BjB,K","sources":["webpack://gatsby-starter-default/./src/components/Navbar/Logo.js","webpack://gatsby-starter-default/./src/components/Navbar.js","webpack://gatsby-starter-default/./src/components/Footer.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/templates/tags.js","webpack://gatsby-starter-default/./src/themes/FlexWrapper.js","webpack://gatsby-starter-default/./src/themes/TagsWrapper.js"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst LogoWrapper = styled.div`\r\n  font-size: 1.3em;\r\n  text-align: center;\r\n  color: #eeeeee;\r\n\r\n  font-family: \"Quicksand\", sans-serif;\r\n\r\n  span {\r\n    color: red;\r\n  }\r\n  a{\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const Logo = () => {\r\n  return (\r\n    <LogoWrapper>\r\n      <Link to=\"/\">\r\n     \r\n        Homemade <span>Polish</span> Alcohols\r\n      </Link>\r\n    </LogoWrapper>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { Logo } from \"./Navbar/Logo\"\r\n\r\n//Styled Components\r\n\r\nconst WrapperNav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1em;\r\n  background-color: #212121;\r\n  a{\r\n    text-decoration: none;\r\n  }\r\n  @media (min-width: 640px){\r\n    justify-content: left;\r\n    padding-left: 2em;\r\n  }\r\n\r\n`\r\n\r\n// const Logo = styled.div`\r\n//   font-size: 1.3em;\r\n//   text-align: center;\r\n//   color: #eeeeee;\r\n\r\n//   font-family: 'Quicksand', sans-serif;\r\n\r\n\r\n//   span {\r\n//     color: red;\r\n//   }\r\n// `\r\n// const AboutMe = styled.div``\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <WrapperNav>\r\n      {/* <Logo>\r\n        Homemade <span>Polish</span> Wines\r\n      </Logo> */}\r\n      <Logo/>\r\n     \r\n \r\n    </WrapperNav>\r\n  )\r\n}\r\n","import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\n// import FooterWrapper from \"../themes/FooterWrapper\"\r\nimport { Logo } from \"./Navbar/Logo\"\r\n\r\nconst FooterSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  background-color: #1e293b;\r\n  font-weight: 500;\r\n  color: #e2e8f0;\r\n  padding: 1em;\r\n  gap: 0.5em;\r\n  \r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n   \r\n    gap: 0.5em;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n  .contact {\r\n    font-weight: bold;\r\n  }\r\n  @media (min-width: 640px) {\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n  }\r\n`\r\nconst FooterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: .5em;\r\n  align-items: left;\r\n  color: #cbd5e1;\r\n  font-weight: 700;\r\n  .logo{\r\n    margin-bottom: 3em;\r\n  }\r\n  a{\r\n    text-decoration: none;\r\n    color: #cbd5e1;\r\n  }\r\n\r\n`\r\n\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterSection>\r\n      <FooterWrapper>\r\n        <Logo className=\"logo\"/>\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/wines\">Wines</Link>\r\n\r\n        <Link to=\"/ciders\">Ciders</Link>\r\n        <Link to=\"/tinctures\">Tinctures</Link>\r\n      </FooterWrapper>\r\n      \r\n      <FooterWrapper>\r\n      <Link className=\"contact\">CONTACT</Link>\r\n      <Link>email: mariuszolszewski21@gmail.com</Link>\r\n      </FooterWrapper>\r\n    </FooterSection>\r\n  )\r\n}\r\n\r\n// export const Navbar = () => {\r\n//     return (\r\n//       <WrapperNav>\r\n//           <Logo>\r\n//          Polo <span>Alkoholo</span>\r\n//           </Logo>\r\n//           {/* <AboutMe>\r\n//   About me\r\n//           </AboutMe> */}\r\n//       </WrapperNav>\r\n//     )\r\n//   }\r\n\r\n// rgba(251, 146, 60, 0.87)\r\n","import * as React from \"react\"\r\nimport  {Navbar}  from \"./Navbar\"\r\nimport { createGlobalStyle} from \"styled-components\"\r\n// import styled from \"styled-components\"\r\nimport {Footer} from \"./Footer\"\r\nconst GlobalStyle = createGlobalStyle`\r\n*, ::after, ::before {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\nbody{\r\n  font-family: 'Raleway', sans-serif;\r\n  /* position: relative; */\r\n\r\n}\r\n\r\n.height{\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\nmain{\r\n  flex-grow: 1;\r\n}\r\n`\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n    <div className=\"height\">\r\n      <GlobalStyle/>\r\n      <Navbar />\r\n      <main>\r\n\r\n      {children}\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport FlexWrapper from \"../themes/FlexWrapper\"\r\nimport TagsWrapper from \"../themes/TagsWrapper\"\r\n//themes\r\n\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  // const { edges } = data.allGraphCmsArticle.edges\r\n  const {edges, totalCount } = data.allGraphCmsArticle\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <Layout>\r\n\r\n    <FlexWrapper>\r\n      <h1>{tagHeader}</h1>\r\n      <TagsWrapper>\r\n      <ul>\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node\r\n          const { title } = node\r\n        {  console.log({slug})}\r\n          return (\r\n            <li key={`slug`}>\r\n              <Link to={`/${slug}`}>{title}</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      \r\n      {/*\r\n              This links to a page that does not yet exist.\r\n              You'll come back to it!\r\n            */}\r\n      <Link className=\"all-tags\" to=\"/tags\">Click to see all tags</Link>\r\n      </TagsWrapper>\r\n    </FlexWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\nquery ($tag: String) {\r\n  allGraphCmsArticle(\r\n    limit: 2000\r\n    sort: {fields: date, order: DESC}\r\n    filter: {tags: {in: [$tag]}}\r\n  ) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        slug\r\n        title\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n// Tags.propTypes = {\r\n//   pageContext: PropTypes.shape({\r\n//     tag: PropTypes.string.isRequired,\r\n//   }),\r\n//   data: PropTypes.shape({\r\n//     allGraphCmsArticle: PropTypes.shape({\r\n//       totalCount: PropTypes.number.isRequired,\r\n//       edges: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//           node: PropTypes.shape({\r\n//             title: PropTypes.string.isRequired,\r\n//             slug: PropTypes.string.isRequired,\r\n//           }),\r\n//         }).isRequired\r\n//       ),\r\n//     }),\r\n//   }),\r\n// }\r\n// export const pageQuery = graphql`\r\n//   query($tag: String) {\r\n//     allMarkdownRemark(\r\n//       limit: 2000\r\n//       sort: { fields: [frontmatter___date], order: DESC }\r\n//       filter: { frontmatter: { tags: { in: [$tag] } } }\r\n//     ) {\r\n//       totalCount\r\n//       edges {\r\n//         node {\r\n//           fields {\r\n//             slug\r\n//           }\r\n//           frontmatter {\r\n//             title\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `\r\n","import styled from \"styled-components\";\r\n\r\nconst FlexWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n\r\na{\r\n    text-decoration: none;\r\n}\r\n\r\nli{\r\n    list-style: none;\r\n}\r\n\r\n\r\n`\r\n\r\nexport default FlexWrapper","\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst TagsWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\ngap: .5em;\r\nmargin-top: 2em;\r\nli{\r\n  list-style: none;\r\n\r\n}\r\na{\r\n  text-decoration: none;\r\n  font-size: 1.2em;\r\n  color: #475569;\r\n}\r\n\r\nul{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.all-tags{\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n}\r\n`\r\n\r\n\r\nexport default TagsWrapper"],"names":["LogoWrapper","styled","Logo","Link","to","WrapperNav","Navbar","FooterSection","FooterWrapper","Footer","className","GlobalStyle","createGlobalStyle","children","pageContext","data","tag","allGraphCmsArticle","edges","totalCount","tagHeader","map","node","slug","title","console","log","key","FlexWrapper","TagsWrapper"],"sourceRoot":""}